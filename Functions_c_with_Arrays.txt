
#include<stdio.h>
#include<stdbool.h> // for bool functions

bool pullout_contents(char *in_file, char elements[][50])
//char pullout_contents(char *in_file, char elements[][50])
//void pullout_contents(char *in_file, char elements[][50])
{
	FILE *input_file = fopen(in_file, "r");

	char line[50];
	for (int line_no = 1; fgets(line, sizeof(line), input_file) != NULL; ++line_no)
	{
		strcpy(elements[line_no], line);
	}

	fclose(input_file);
}

bool show_contents(const char elements[][50])
//char show_contents(const char elements[][50])
//void show_contents(const char elements[][50])
{
	for (int line_no = 1; line_no <3; ++line_no)
	{
		printf("LINE %d: %s", line_no, elements[line_no]);
	}
}

bool pushin_contents(char out_file[], const char elements[][50])
//char pushin_contents(char out_file[], const char elements[][50])
//void pushin_contents(char out_file[], const char elements[][50])
{
	FILE* output_file= fopen(out_file, "w");//w for write a for append

	for (int line_no = 1; line_no <3; ++line_no)
	{
		fprintf(output_file, "LINE %d: %s", line_no, elements[line_no]);
	}

	fclose(output_file);
}

int main()
{
	char in_file[] = "test.txt";
	//FILE *input_file = fopen(in_file, "r");

	char out_file[] = "test.txt.out";
	//FILE *output_file = fopen(out_file, "w");//w for write a for append

	char elements[25][50];

	//char line[25];
	//for (int line_no = 1; fgets(line, sizeof(line), input_file) != NULL; ++line_no)
	//{
	//	strcpy(elements[line_no], line);
	//}

	pullout_contents(in_file, elements);

	//for (int line_no = 1; line_no <3; ++line_no)
	//{
	//	//printf("LINE %d: %s", line_no, elements[line_no]);
	//	fprintf(output_file, "LINE %d: %s", line_no, elements[line_no]);
	//}	

	show_contents(elements);

	pushin_contents(out_file, elements);

	//if (input_file)
	//{
	//	fclose(input_file);
		//fclose(output_file);
	//}

	getch();
	return 0;
}


#include<stdio.h>

//typedef struct File_element
//{
//	char line[25];
//	int line_no;
//}file_element;

typedef struct File_element
{
	//union MyUnion
	union
	{
		char line[25];
		int line_no;
	};
}file_element;

//typedef union File_element
//{
//	char line[25];
//	int line_no;
//}file_element;


int main()
{
	char in_file[] = "test.txt";
	FILE *input_file = fopen(in_file, "r");

	char out_file[] = "test.txt.out";
	FILE *output_file = fopen(out_file, "w");//w for write a for append

	file_element elements[25];

	char line[25];

	for (int line_no = 1; fgets(line, sizeof(line), input_file) != NULL; ++line_no)
	{	
		//file_element *element = NULL;	
		//element = malloc(sizeof(file_element));
		//strcpy(element->line, line);
		//element->line_no = line_no;

		strcpy(elements[line_no].line, line);
		elements[line_no].line_no = line_no;
		//strcpy(&elements[line_no], element);
		//elements[line_no] = *element;
		//strcpy(elements[line_no].line, element->line);		
		//elements[line_no].line_no = element->line_no;
	}

	for (int line_no = 1; line_no <3; ++line_no)
	{
		printf("LINE %d: %s\n", elements[ line_no].line_no, elements[line_no].line);
		printf("LINE %p: %p\n", &elements[ line_no].line_no, &elements[line_no].line);
		fprintf(output_file, "LINE %d: %s\n", elements[line_no].line_no, elements[line_no].line);
		fprintf(output_file, "LINE %p: %p\n", &elements[line_no].line_no, &elements[line_no].line);
	}

	if (input_file)
	{
		fclose(input_file);
		fclose(output_file);
	}
	getch();
	return 0;
}


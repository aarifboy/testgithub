
#include <iostream>    //for cout
#include <fstream>     // for ofstream/ifstream
#include <string>     //for << and getline

bool pullout_contents(std::string in_file, std::string elements[])
//std::string pullout_contents(std::string in_file, std::string elements[])
//void pullout_contents(std::string in_file, std::string elements[])
{
	std::ifstream input_file(in_file.c_str());

	std::string line;
	for (int line_no = 1; std::getline(input_file, line); ++line_no)
	{
		elements[line_no]=line;
	}

	input_file.close();
	//return *elements;
	return true;
}

bool show_contents(const std::string elements[])
//std::string show_contents(const std::string elements[])
//void show_contents(const std::string elements[])
{
	for (int line_no = 1; line_no < 3; line_no++)
	{
		std::cout << "LINE " << line_no << ":" << elements[line_no] << std::endl;
	}

	//return *elements;
	return true;
}

bool pushin_contents(std::string out_file, const std::string elements[])
//std::string pushin_contents(std::string out_file, const std::string elements[])
//void pushin_contents(std::string out_file, const std::string elements[])
{
	std::ofstream output_file(out_file.c_str());

	for (int line_no = 1; line_no < 3; line_no++)
	{
		output_file << "LINE " << line_no << ":" << elements[line_no] << std::endl;
	}

	output_file.close();
	//return *elements;
	return true;
}

int main()
{
	std::string in_file = "test.txt";
	//std::ifstream input_file(in_file.c_str());

	std::string out_file = "test.txt.out";
	//std::ofstream output_file(out_file.c_str());

	std::string elements[100];

	//std::string line;
	//for (int line_no = 1; std::getline(input_file, line); ++line_no)
	//{
	//	elements[line_no] = line;
	//}

	pullout_contents(in_file, elements);

	//for (int line_no = 1; line_no < 3; line_no++)
	//{
	//	//std::cout << "LINE " << line_no << ":" << elements[line_no] << std::endl;
	//	output_file << "LINE " << line_no << ":" << elements[line_no] << std::endl;
	//}

	show_contents(elements);

	pushin_contents(out_file, elements);

	//if (input_file)
	//{
	//	input_file.close();
		//output_file.close();
	//}

	std::cin.get();
	return 0;
}
